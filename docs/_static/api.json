{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/rpm/advisories/": {"get": {"operationId": "content_rpm_advisories_list", "summary": "List update records", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.", "parameters": [{"name": "id", "in": "query", "description": "Filter results where id matches value", "required": false, "type": "string"}, {"name": "id__in", "in": "query", "description": "Filter results where id is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "Filter results where status matches value", "required": false, "type": "string"}, {"name": "status__in", "in": "query", "description": "Filter results where status is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "severity", "in": "query", "description": "Filter results where severity matches value", "required": false, "type": "string"}, {"name": "severity__in", "in": "query", "description": "Filter results where severity is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "type", "in": "query", "description": "Filter results where type matches value", "required": false, "type": "string"}, {"name": "type__in", "in": "query", "description": "Filter results where type is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.UpdateRecord"}}}}}}, "tags": ["content: advisories"]}, "post": {"operationId": "content_rpm_advisories_create", "summary": "Create an update record", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.UpdateRecord"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["content: advisories"]}, "parameters": []}, "{update_record_href}": {"get": {"operationId": "content_rpm_advisories_read", "summary": "Inspect an update record", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.UpdateRecord"}}}, "tags": ["content: advisories"]}, "parameters": [{"name": "update_record_href", "in": "path", "description": "URI of Update Record. e.g.: /pulp/api/v3/content/rpm/advisories/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/distribution_trees/": {"get": {"operationId": "content_rpm_distribution_trees_list", "summary": "List distribution trees", "description": "Distribution Tree Viewset.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.DistributionTree"}}}}}}, "tags": ["content: distribution_trees"]}, "parameters": []}, "{distribution_tree_href}": {"get": {"operationId": "content_rpm_distribution_trees_read", "summary": "Inspect a distribution tree", "description": "Distribution Tree Viewset.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.DistributionTree"}}}, "tags": ["content: distribution_trees"]}, "delete": {"operationId": "content_rpm_distribution_trees_delete", "summary": "Delete a distribution tree", "description": "Distribution Tree Viewset.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: distribution_trees"]}, "parameters": [{"name": "distribution_tree_href", "in": "path", "description": "URI of Distribution Tree. e.g.: /pulp/api/v3/content/rpm/distribution_trees/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/modulemd-defaults/": {"get": {"operationId": "content_rpm_modulemd-defaults_list", "summary": "List modulemd defaultss", "description": "ViewSet for Modulemd.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.ModulemdDefaults"}}}}}}, "tags": ["content: modulemd-defaults"]}, "post": {"operationId": "content_rpm_modulemd-defaults_create", "summary": "Create a modulemd defaults", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}, {"name": "module", "in": "formData", "description": "Modulemd name.", "required": true, "type": "string", "minLength": 1}, {"name": "stream", "in": "formData", "description": "Modulemd default stream.", "required": true, "type": "string", "minLength": 1}, {"name": "profiles", "in": "formData", "description": "Default profiles for modulemd streams.", "required": true, "type": "string"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: modulemd-defaults"]}, "parameters": []}, "{modulemd_defaults_href}": {"get": {"operationId": "content_rpm_modulemd-defaults_read", "summary": "Inspect a modulemd defaults", "description": "ViewSet for Modulemd.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.ModulemdDefaults"}}}, "tags": ["content: modulemd-defaults"]}, "parameters": [{"name": "modulemd_defaults_href", "in": "path", "description": "URI of Modulemd Defaults. e.g.: /pulp/api/v3/content/rpm/modulemd-defaults/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/modulemd/": {"get": {"operationId": "content_rpm_modulemd_list", "summary": "List modulemds", "description": "ViewSet for Modulemd.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.Modulemd"}}}}}}, "tags": ["content: modulemd"]}, "post": {"operationId": "content_rpm_modulemd_create", "summary": "Create a modulemd", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}, {"name": "name", "in": "formData", "description": "Modulemd name.", "required": true, "type": "string", "minLength": 1}, {"name": "stream", "in": "formData", "description": "Stream name.", "required": true, "type": "string", "minLength": 1}, {"name": "version", "in": "formData", "description": "Modulemd version.", "required": true, "type": "string", "minLength": 1}, {"name": "context", "in": "formData", "description": "Modulemd context.", "required": true, "type": "string", "minLength": 1}, {"name": "arch", "in": "formData", "description": "Modulemd architecture.", "required": true, "type": "string", "minLength": 1}, {"name": "artifacts", "in": "formData", "description": "Modulemd artifacts.", "required": true, "type": "string"}, {"name": "dependencies", "in": "formData", "description": "Modulemd dependencies.", "required": true, "type": "string"}, {"name": "packages", "in": "formData", "description": "Modulemd artifacts' packages.", "required": false, "type": "array", "items": {"type": "string", "x-nullable": true}, "uniqueItems": true}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: modulemd"]}, "parameters": []}, "{modulemd_href}": {"get": {"operationId": "content_rpm_modulemd_read", "summary": "Inspect a modulemd", "description": "ViewSet for Modulemd.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.Modulemd"}}}, "tags": ["content: modulemd"]}, "parameters": [{"name": "modulemd_href", "in": "path", "description": "URI of Modulemd. e.g.: /pulp/api/v3/content/rpm/modulemd/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/packages/": {"get": {"operationId": "content_rpm_packages_list", "summary": "List packages", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "epoch", "in": "query", "description": "Filter results where epoch matches value", "required": false, "type": "string"}, {"name": "epoch__in", "in": "query", "description": "Filter results where epoch is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "version__in", "in": "query", "description": "Filter results where version is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "release", "in": "query", "description": "Filter results where release matches value", "required": false, "type": "string"}, {"name": "release__in", "in": "query", "description": "Filter results where release is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "arch", "in": "query", "description": "Filter results where arch matches value", "required": false, "type": "string"}, {"name": "arch__in", "in": "query", "description": "Filter results where arch is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pkgId", "in": "query", "description": "Filter results where pkgId matches value", "required": false, "type": "string"}, {"name": "pkgId__in", "in": "query", "description": "Filter results where pkgId is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "checksum_type", "in": "query", "description": "Filter results where checksum_type matches value", "required": false, "type": "string"}, {"name": "checksum_type__in", "in": "query", "description": "Filter results where checksum_type is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.Package"}}}}}}, "tags": ["content: packages"]}, "post": {"operationId": "content_rpm_packages_create", "summary": "Create a package", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: packages"]}, "parameters": []}, "{package_href}": {"get": {"operationId": "content_rpm_packages_read", "summary": "Inspect a package", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.Package"}}}, "tags": ["content: packages"]}, "parameters": [{"name": "package_href", "in": "path", "description": "URI of Package. e.g.: /pulp/api/v3/content/rpm/packages/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/repo_metadata_files/": {"get": {"operationId": "content_rpm_repo_metadata_files_list", "summary": "List repo metadata files", "description": "RepoMetadataFile Viewset.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RepoMetadataFile"}}}}}}, "tags": ["content: repo_metadata_files"]}, "parameters": []}, "{repo_metadata_file_href}": {"get": {"operationId": "content_rpm_repo_metadata_files_read", "summary": "Inspect a repo metadata file", "description": "RepoMetadataFile Viewset.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RepoMetadataFile"}}}, "tags": ["content: repo_metadata_files"]}, "delete": {"operationId": "content_rpm_repo_metadata_files_delete", "summary": "Delete a repo metadata file", "description": "RepoMetadataFile Viewset.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: repo_metadata_files"]}, "parameters": [{"name": "repo_metadata_file_href", "in": "path", "description": "URI of Repo Metadata File. e.g.: /pulp/api/v3/content/rpm/repo_metadata_files/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/rpm/rpm/": {"get": {"operationId": "distributions_rpm_rpm_list", "summary": "List rpm distributions", "description": "ViewSet for RPM Distributions.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmDistribution"}}}}}}, "tags": ["distributions: rpm"]}, "post": {"operationId": "distributions_rpm_rpm_create", "summary": "Create a rpm distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "parameters": []}, "{rpm_distribution_href}": {"get": {"operationId": "distributions_rpm_rpm_read", "summary": "Inspect a rpm distribution", "description": "ViewSet for RPM Distributions.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}}, "tags": ["distributions: rpm"]}, "put": {"operationId": "distributions_rpm_rpm_update", "summary": "Update a rpm distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "patch": {"operationId": "distributions_rpm_rpm_partial_update", "summary": "Partially update a rpm distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "delete": {"operationId": "distributions_rpm_rpm_delete", "summary": "Delete a rpm distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "parameters": [{"name": "rpm_distribution_href", "in": "path", "description": "URI of Rpm Distribution. e.g.: /pulp/api/v3/distributions/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/publications/rpm/rpm/": {"get": {"operationId": "publications_rpm_rpm_list", "summary": "List rpm publications", "description": "ViewSet for Rpm Publications.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmPublication"}}}}}}, "tags": ["publications: rpm"]}, "post": {"operationId": "publications_rpm_rpm_create", "summary": "Create a rpm publication", "description": "Trigger an asynchronous task to create a new RPM content publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmPublication"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publications: rpm"]}, "parameters": []}, "{rpm_publication_href}": {"get": {"operationId": "publications_rpm_rpm_read", "summary": "Inspect a rpm publication", "description": "ViewSet for Rpm Publications.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmPublication"}}}, "tags": ["publications: rpm"]}, "delete": {"operationId": "publications_rpm_rpm_delete", "summary": "Delete a rpm publication", "description": "ViewSet for Rpm Publications.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications: rpm"]}, "parameters": [{"name": "rpm_publication_href", "in": "path", "description": "URI of Rpm Publication. e.g.: /pulp/api/v3/publications/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/rpm/rpm/": {"get": {"operationId": "remotes_rpm_rpm_list", "summary": "List rpm remotes", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmRemote"}}}}}}, "tags": ["remotes: rpm"]}, "post": {"operationId": "remotes_rpm_rpm_create", "summary": "Create a rpm remote", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}}, "tags": ["remotes: rpm"]}, "parameters": []}, "{rpm_remote_href}": {"get": {"operationId": "remotes_rpm_rpm_read", "summary": "Inspect a rpm remote", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}}, "tags": ["remotes: rpm"]}, "put": {"operationId": "remotes_rpm_rpm_update", "summary": "Update a rpm remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: rpm"]}, "patch": {"operationId": "remotes_rpm_rpm_partial_update", "summary": "Partially update a rpm remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: rpm"]}, "delete": {"operationId": "remotes_rpm_rpm_delete", "summary": "Delete a rpm remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: rpm"]}, "parameters": [{"name": "rpm_remote_href", "in": "path", "description": "URI of Rpm Remote. e.g.: /pulp/api/v3/remotes/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/rpm/rpm/": {"get": {"operationId": "repositories_rpm_rpm_list", "summary": "List rpm repositorys", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmRepository"}}}}}}, "tags": ["repositories: rpm"]}, "post": {"operationId": "repositories_rpm_rpm_create", "summary": "Create a rpm repository", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}}, "tags": ["repositories: rpm"]}, "parameters": []}, "{rpm_repository_href}": {"get": {"operationId": "repositories_rpm_rpm_read", "summary": "Inspect a rpm repository", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}}, "tags": ["repositories: rpm"]}, "put": {"operationId": "repositories_rpm_rpm_update", "summary": "Update a rpm repository", "description": "Trigger an asynchronous task to update a repository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "patch": {"operationId": "repositories_rpm_rpm_partial_update", "summary": "Partially update a rpm repository", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}}, "tags": ["repositories: rpm"]}, "delete": {"operationId": "repositories_rpm_rpm_delete", "summary": "Delete a rpm repository", "description": "Trigger an asynchronous task to delete a repository.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "parameters": [{"name": "rpm_repository_href", "in": "path", "description": "URI of Rpm Repository. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/", "required": true, "type": "string"}]}, "{rpm_repository_href}modify/": {"post": {"operationId": "repositories_rpm_rpm_modify", "description": "Trigger an asynchronous task to create a new repository version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "parameters": [{"name": "rpm_repository_href", "in": "path", "description": "URI of Rpm Repository. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/", "required": true, "type": "string"}]}, "{rpm_repository_href}sync/": {"post": {"operationId": "repositories_rpm_rpm_sync", "summary": "Sync from remote", "description": "Trigger an asynchronous task to sync RPM content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "parameters": [{"name": "rpm_repository_href", "in": "path", "description": "URI of Rpm Repository. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/rpm/copy/": {"post": {"operationId": "copy_content", "summary": "Copy content", "description": "Trigger an asynchronous task to copy RPM contentfrom one repository into another, creating a newrepository version.", "parameters": [{"name": "source_repo", "in": "formData", "description": "A URI of the repository.", "required": false, "type": "string", "format": "uri"}, {"name": "source_repo_version", "in": "formData", "description": "A URI of the repository version", "required": false, "type": "string", "format": "uri"}, {"name": "dest_repo", "in": "formData", "description": "A URI of the repository.", "required": true, "type": "string", "format": "uri"}, {"name": "types", "in": "formData", "description": "A list of types to copy [\"package\", \"advisory\"]", "required": false, "type": "array", "items": {"type": "string"}, "default": ["package", "advisory"]}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["rpm: copy"]}, "parameters": []}}, "definitions": {"rpm.UpdateCollection": {"description": "List of packages", "required": ["name", "shortname"], "type": "object", "properties": {"name": {"title": "Name", "description": "Collection name.", "type": "string", "minLength": 1}, "shortname": {"title": "Shortname", "description": "Collection short name.", "type": "string"}, "packages": {"description": "List of packages", "type": "array", "items": {"type": "object", "additionalProperties": {"type": "string"}}, "readOnly": true}}}, "rpm.UpdateRecord": {"required": ["id", "updated_date", "description", "issued_date", "fromstr", "status", "title", "summary", "version", "type", "severity", "solution", "release", "rights", "pushcount"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "id": {"title": "Id", "description": "Update id (short update name, e.g. RHEA-2013:1777)", "type": "string", "minLength": 1}, "updated_date": {"title": "Updated date", "description": "Date when the update was updated (e.g. '2013-12-02 00:00:00')", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "Update description", "type": "string", "minLength": 1}, "issued_date": {"title": "Issued date", "description": "Date when the update was issued (e.g. '2013-12-02 00:00:00')", "type": "string", "minLength": 1}, "fromstr": {"title": "Fromstr", "description": "Source of the update (e.g. security@redhat.com)", "type": "string", "minLength": 1}, "status": {"title": "Status", "description": "Update status ('final', ...)", "type": "string", "minLength": 1}, "title": {"title": "Title", "description": "Update name", "type": "string", "minLength": 1}, "summary": {"title": "Summary", "description": "Short summary", "type": "string"}, "version": {"title": "Version", "description": "Update version (probably always an integer number)", "type": "string", "minLength": 1}, "type": {"title": "Type", "description": "Update type ('enhancement', 'bugfix', ...)", "type": "string", "minLength": 1}, "severity": {"title": "Severity", "description": "Severity", "type": "string"}, "solution": {"title": "Solution", "description": "Solution", "type": "string"}, "release": {"title": "Release", "description": "Update release", "type": "string", "minLength": 1}, "rights": {"title": "Rights", "description": "Copyrights", "type": "string"}, "pushcount": {"title": "Pushcount", "description": "Push count", "type": "string"}, "pkglist": {"description": "List of packages", "type": "array", "items": {"$ref": "#/definitions/rpm.UpdateCollection"}, "readOnly": true}, "references": {"description": "List of references", "type": "array", "items": {"type": "object", "additionalProperties": {"type": "string"}}, "readOnly": true}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "Addon": {"required": ["addon_id", "uid", "name", "type", "packages"], "type": "object", "properties": {"addon_id": {"title": "Addon id", "description": "Addon id.", "type": "string", "minLength": 1}, "uid": {"title": "Uid", "description": "Addon uid.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Addon name.", "type": "string", "minLength": 1}, "type": {"title": "Type", "description": "Addon type.", "type": "string", "minLength": 1}, "packages": {"title": "Packages", "description": "Relative path to directory with binary RPMs.", "type": "string", "minLength": 1}}}, "Checksum": {"required": ["path", "checksum"], "type": "object", "properties": {"path": {"title": "Path", "description": "File path.", "type": "string", "minLength": 1}, "checksum": {"title": "Checksum", "description": "Checksum for the file.", "type": "string", "minLength": 1}}}, "Artifact": {"title": "Artifact", "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "file": {"title": "File", "description": "The stored file.", "type": "string", "readOnly": true}, "size": {"title": "Size", "description": "The size of the file in bytes.", "type": "integer"}, "md5": {"title": "Md5", "description": "The MD5 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha1": {"title": "Sha1", "description": "The SHA-1 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha224": {"title": "Sha224", "description": "The SHA-224 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha512": {"title": "Sha512", "description": "The SHA-512 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}}}, "Image": {"required": ["name", "path", "platforms", "artifact"], "type": "object", "properties": {"name": {"title": "Name", "description": "File name.", "type": "string", "minLength": 1}, "path": {"title": "Path", "description": "File path.", "type": "string", "minLength": 1}, "platforms": {"title": "Platforms", "description": "Compatible platforms.", "type": "string", "minLength": 1}, "artifact": {"$ref": "#/definitions/Artifact"}}}, "Variant": {"required": ["variant_id", "uid", "name", "type", "packages", "source_packages", "source_repository", "debug_packages", "debug_repository", "identity"], "type": "object", "properties": {"variant_id": {"title": "Variant id", "description": "Variant id.", "type": "string", "minLength": 1}, "uid": {"title": "Uid", "description": "Variant uid.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Variant name.", "type": "string", "minLength": 1}, "type": {"title": "Type", "description": "Variant type.", "type": "string", "minLength": 1}, "packages": {"title": "Packages", "description": "Relative path to directory with binary RPMs.", "type": "string", "minLength": 1}, "source_packages": {"title": "Source packages", "description": "Relative path to directory with source RPMs.", "type": "string", "minLength": 1}, "source_repository": {"title": "Source repository", "description": "Relative path to YUM repository with source RPMs.", "type": "string", "minLength": 1}, "debug_packages": {"title": "Debug packages", "description": "Relative path to directory with debug RPMs.", "type": "string", "minLength": 1}, "debug_repository": {"title": "Debug repository", "description": "Relative path to YUM repository with debug RPMs.", "type": "string", "minLength": 1}, "identity": {"title": "Identity", "description": "Relative path to a pem file that identifies a product.", "type": "string", "minLength": 1}}}, "rpm.DistributionTree": {"required": ["header_version", "release_name", "release_short", "release_version", "release_is_layered", "base_product_name", "base_product_short", "base_product_version", "arch", "build_timestamp", "instimage", "mainimage", "discnum", "totaldiscs", "addons", "checksums", "images", "variants"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "header_version": {"title": "Header version", "description": "Header Version.", "type": "string", "minLength": 1}, "release_name": {"title": "Release name", "description": "Release name.", "type": "string", "minLength": 1}, "release_short": {"title": "Release short", "description": "Release short name.", "type": "string", "minLength": 1}, "release_version": {"title": "Release version", "description": "Release version.", "type": "string", "minLength": 1}, "release_is_layered": {"title": "Release is layered", "description": "Typically False for an operating system, True otherwise.", "type": "boolean"}, "base_product_name": {"title": "Base product name", "description": "Base Product name.", "type": "string", "minLength": 1}, "base_product_short": {"title": "Base product short", "description": "Base Product short name.", "type": "string", "minLength": 1}, "base_product_version": {"title": "Base product version", "description": "Base Product version.", "type": "string", "minLength": 1}, "arch": {"title": "Arch", "description": "Tree architecturerch.", "type": "string", "minLength": 1}, "build_timestamp": {"title": "Build timestamp", "description": "Tree build time timestamp.", "type": "number"}, "instimage": {"title": "Instimage", "description": "Relative path to Anaconda instimage.", "type": "string", "minLength": 1}, "mainimage": {"title": "Mainimage", "description": "Relative path to Anaconda stage2 image.", "type": "string", "minLength": 1}, "discnum": {"title": "Discnum", "description": "Disc number.", "type": "integer"}, "totaldiscs": {"title": "Totaldiscs", "description": "Number of discs in media set.", "type": "integer"}, "addons": {"type": "array", "items": {"$ref": "#/definitions/Addon"}}, "checksums": {"type": "array", "items": {"$ref": "#/definitions/Checksum"}}, "images": {"type": "array", "items": {"$ref": "#/definitions/Image"}}, "variants": {"type": "array", "items": {"$ref": "#/definitions/Variant"}}}}, "rpm.ModulemdDefaults": {"required": ["relative_path", "module", "stream", "profiles"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "file": {"title": "File", "description": "An uploaded file that should be turned into the artifact of the content unit.", "type": "string", "readOnly": true}, "repository": {"title": "Repository", "description": "A URI of a repository the new content unit should be associated with.", "type": "string", "format": "uri"}, "module": {"title": "Module", "description": "Modulemd name.", "type": "string", "minLength": 1}, "stream": {"title": "Stream", "description": "Modulemd default stream.", "type": "string", "minLength": 1}, "profiles": {"title": "Profiles", "description": "Default profiles for modulemd streams.", "type": "object"}}}, "rpm.Modulemd": {"required": ["relative_path", "name", "stream", "version", "context", "arch", "artifacts", "dependencies"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "file": {"title": "File", "description": "An uploaded file that should be turned into the artifact of the content unit.", "type": "string", "readOnly": true}, "repository": {"title": "Repository", "description": "A URI of a repository the new content unit should be associated with.", "type": "string", "format": "uri"}, "name": {"title": "Name", "description": "Modulemd name.", "type": "string", "minLength": 1}, "stream": {"title": "Stream", "description": "Stream name.", "type": "string", "minLength": 1}, "version": {"title": "Version", "description": "Modulemd version.", "type": "string", "minLength": 1}, "context": {"title": "Context", "description": "Modulemd context.", "type": "string", "minLength": 1}, "arch": {"title": "Arch", "description": "Modulemd architecture.", "type": "string", "minLength": 1}, "artifacts": {"title": "Artifacts", "description": "Modulemd artifacts.", "type": "object"}, "dependencies": {"title": "Dependencies", "description": "Modulemd dependencies.", "type": "object"}, "packages": {"description": "Modulemd artifacts' packages.", "type": "array", "items": {"description": "Modulemd artifacts' packages.", "type": "string", "x-nullable": true}, "uniqueItems": true}}}, "rpm.Package": {"required": ["relative_path"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "file": {"title": "File", "description": "An uploaded file that should be turned into the artifact of the content unit.", "type": "string", "readOnly": true}, "repository": {"title": "Repository", "description": "A URI of a repository the new content unit should be associated with.", "type": "string", "format": "uri"}, "name": {"title": "Name", "description": "Name of the package", "type": "string", "readOnly": true, "minLength": 1}, "epoch": {"title": "Epoch", "description": "The package's epoch", "type": "string", "readOnly": true}, "version": {"title": "Version", "description": "The version of the package. For example, '2.8.0'", "type": "string", "readOnly": true, "minLength": 1}, "release": {"title": "Release", "description": "The release of a particular version of the package. e.g. '1.el7' or '3.f24'", "type": "string", "readOnly": true, "minLength": 1}, "arch": {"title": "Arch", "description": "The target architecture for a package.For example, 'x86_64', 'i686', or 'noarch'", "type": "string", "readOnly": true, "minLength": 1}, "pkgId": {"title": "Pkgid", "description": "Checksum of the package file", "type": "string", "readOnly": true, "minLength": 1}, "checksum_type": {"title": "Checksum type", "description": "Type of checksum, e.g. 'sha256', 'md5'", "type": "string", "readOnly": true, "minLength": 1}, "summary": {"title": "Summary", "description": "Short description of the packaged software", "type": "string", "readOnly": true}, "description": {"title": "Description", "description": "In-depth description of the packaged software", "type": "string", "readOnly": true}, "url": {"title": "Url", "description": "URL with more information about the packaged software", "type": "string", "readOnly": true}, "changelogs": {"title": "Changelogs", "description": "Changelogs that package contains", "type": "object", "readOnly": true, "default": "[]"}, "files": {"title": "Files", "description": "Files that package contains", "type": "object", "readOnly": true, "default": "[]"}, "requires": {"title": "Requires", "description": "Capabilities the package requires", "type": "object", "readOnly": true, "default": "[]"}, "provides": {"title": "Provides", "description": "Capabilities the package provides", "type": "object", "readOnly": true, "default": "[]"}, "conflicts": {"title": "Conflicts", "description": "Capabilities the package conflicts", "type": "object", "readOnly": true, "default": "[]"}, "obsoletes": {"title": "Obsoletes", "description": "Capabilities the package obsoletes", "type": "object", "readOnly": true, "default": "[]"}, "suggests": {"title": "Suggests", "description": "Capabilities the package suggests", "type": "object", "readOnly": true, "default": "[]"}, "enhances": {"title": "Enhances", "description": "Capabilities the package enhances", "type": "object", "readOnly": true, "default": "[]"}, "recommends": {"title": "Recommends", "description": "Capabilities the package recommends", "type": "object", "readOnly": true, "default": "[]"}, "supplements": {"title": "Supplements", "description": "Capabilities the package supplements", "type": "object", "readOnly": true, "default": "[]"}, "location_base": {"title": "Location base", "description": "Base location of this package", "type": "string", "readOnly": true}, "location_href": {"title": "Location href", "description": "Relative location of package to the repodata", "type": "string", "readOnly": true, "minLength": 1}, "rpm_buildhost": {"title": "Rpm buildhost", "description": "Hostname of the system that built the package", "type": "string", "readOnly": true}, "rpm_group": {"title": "Rpm group", "description": "RPM group (See: http://fedoraproject.org/wiki/RPMGroups)", "type": "string", "readOnly": true}, "rpm_license": {"title": "Rpm license", "description": "License term applicable to the package software (GPLv2, etc.)", "type": "string", "readOnly": true}, "rpm_packager": {"title": "Rpm packager", "description": "Person or persons responsible for creating the package", "type": "string", "readOnly": true}, "rpm_sourcerpm": {"title": "Rpm sourcerpm", "description": "Name of the source package (srpm) the package was built from", "type": "string", "readOnly": true}, "rpm_vendor": {"title": "Rpm vendor", "description": "Name of the organization that produced the package", "type": "string", "readOnly": true}, "rpm_header_start": {"title": "Rpm header start", "description": "First byte of the header", "type": "integer", "readOnly": true}, "rpm_header_end": {"title": "Rpm header end", "description": "Last byte of the header", "type": "integer", "readOnly": true}, "is_modular": {"title": "Is modular", "description": "Flag to identify if the package is modular", "type": "boolean", "readOnly": true}, "size_archive": {"title": "Size archive", "description": "Size, in bytes, of the archive portion of the original package file", "type": "integer", "readOnly": true}, "size_installed": {"title": "Size installed", "description": "Total size, in bytes, of every file installed by this package", "type": "integer", "readOnly": true}, "size_package": {"title": "Size package", "description": "Size, in bytes, of the package", "type": "integer", "readOnly": true}, "time_build": {"title": "Time build", "description": "Time the package was built in seconds since the epoch", "type": "integer", "readOnly": true}, "time_file": {"title": "Time file", "description": "The 'file' time attribute in the primary XML - file mtime in seconds since the epoch.", "type": "integer", "readOnly": true}}}, "rpm.RepoMetadataFile": {"required": ["relative_path", "data_type", "checksum_type", "checksum"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "file": {"title": "File", "description": "An uploaded file that should be turned into the artifact of the content unit.", "type": "string", "readOnly": true}, "repository": {"title": "Repository", "description": "A URI of a repository the new content unit should be associated with.", "type": "string", "format": "uri"}, "data_type": {"title": "Data type", "description": "Metadata type.", "type": "string", "minLength": 1}, "checksum_type": {"title": "Checksum type", "description": "Checksum type for the file.", "type": "string", "minLength": 1}, "checksum": {"title": "Checksum", "description": "Checksum for the file.", "type": "string", "minLength": 1}}}, "rpm.RpmDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "maxLength": 255, "minLength": 1}, "base_url": {"title": "Base url", "description": "The URL for accessing the publication as defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "maxLength": 255, "minLength": 1}, "publication": {"title": "Publication", "description": "Publication to be served", "type": "string", "format": "uri", "x-nullable": true}}}, "rpm.RpmPublication": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "publisher": {"title": "Publisher", "type": "string", "format": "uri", "x-nullable": true}, "repository_version": {"title": "Repository version", "type": "string", "format": "uri"}, "repository": {"title": "Repository", "description": "A URI of the repository to be published.", "type": "string", "format": "uri"}}}, "rpm.RpmRemote": {"required": ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}}}, "rpm.RpmRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "plugin_managed": {"title": "Plugin managed", "description": "True if the plugin manages this repository, users typically do not interact with it.", "type": "boolean", "readOnly": true}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "RepositoryAddRemoveContent": {"type": "object", "properties": {"add_content_units": {"description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed.", "type": "array", "items": {"type": "string"}}, "remove_content_units": {"description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added.", "type": "array", "items": {"type": "string"}}, "base_version": {"title": "Base version", "description": "A repository version whose content will be used as the initial set of content for the new repository version", "type": "string", "format": "uri"}}}, "RepositorySyncURL": {"required": ["remote"], "type": "object", "properties": {"remote": {"title": "Remote", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}}, "tags": [{"name": "content: advisories", "x-displayName": "Content: Advisories"}, {"name": "content: distribution_trees", "x-displayName": "Content: Distribution_Trees"}, {"name": "content: modulemd-defaults", "x-displayName": "Content: Modulemd-Defaults"}, {"name": "content: modulemd", "x-displayName": "Content: Modulemd"}, {"name": "content: packages", "x-displayName": "Content: Packages"}, {"name": "content: repo_metadata_files", "x-displayName": "Content: Repo_Metadata_Files"}, {"name": "distributions: rpm", "x-displayName": "Distributions: Rpm"}, {"name": "publications: rpm", "x-displayName": "Publications: Rpm"}, {"name": "remotes: rpm", "x-displayName": "Remotes: Rpm"}, {"name": "repositories: rpm", "x-displayName": "Repositories: Rpm"}, {"name": "rpm: copy", "x-displayName": "Rpm: Copy"}]}